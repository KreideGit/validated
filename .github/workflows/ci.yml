name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang, apple-clang, msvc]
        exclude:
          - os: macos-latest
            compiler: gcc
          - os: macos-latest
            compiler: clang
          - os: windows-latest
            compiler: apple-clang

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build g++ clang

      - name: Set up macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install cmake ninja

      - name: Set up Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install ninja -y

      - name: Set up compiler
        run: |
          if [[ "${{ matrix.compiler }}" == "gcc" ]]; then
            export CC=gcc
            export CXX=g++
          elif [[ "${{ matrix.compiler }}" == "clang" ]]; then
            export CC=clang
            export CXX=clang++
          elif [[ "${{ matrix.compiler }}" == "apple-clang" ]]; then
            export CC=clang
            export CXX=clang++
          elif [[ "${{ matrix.compiler }}" == "msvc" ]]; then
            export CC=cl
            export CXX=cl
          fi
        shell: bash

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON

      - name: Build
        run: cmake --build build --config Release

      - name: Run tests
        run: ctest --test-dir build --output-on-failure
